@using BookManagement.Constant;
@using BookManagement.Models.Model;
@using System.Globalization;
@using X.PagedList;
@using X.PagedList.Mvc.Core;
@using BookManagement.Models.Entity;
@model PagingModel<OrderViewModel>

@{
    ViewData["Title"] = "Chờ lấy hàng";
    ViewData["HeaderTitle"] = "Đơn hàng";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    ViewBag.Menu = 2;
}

@section css {
}

<div class="row">
    <div class="col-12">
        <div class="nav-align-top mb-4">
            <ul class="nav nav-tabs" role="tablist">
                <li class="nav-item">
                    <a class="nav-link active" href="#">
                        Chờ lấy hàng
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/admin/delivering">
                        Đang giao hàng
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/admin/ordercomplete">
                        Hoàn thành
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/admin/ordercancel">
                        Đã hủy
                    </a>
                </li>
            </ul>
            <div class="tab-content">
                <div class="tab-pane fade show active" role="tabpanel">
                    <div class="d-flex justify-content-between ">
                        <h5 class="font-weight-bole">Tổng số: <strong>@Model.TotalRecord</strong> đơn hàng</h5>
                        <nav aria-label="Page navigation">
                            @Html.PagedListPager((IPagedList)Model.DataPaging, page => Url.Action("waitingdelivery", "admin", new { pageIndex = page }), new PagedListRenderOptions
                       {
                           LiElementClasses = new string[] { "page-item" },
                           PageClasses = new string[] { "page-link" },
                           UlElementClasses = new string[] { "pagination justify-content-center mb-1" },
                           MaximumPageNumbersToDisplay = 5,
                       })
                        </nav>
                    </div>
                    @{
                        if (Model.DataPaging != null && Model.DataPaging.Any())
                        {
                            @foreach (var item in Model.DataPaging)
                            {
                                <div class="card mt-4">
                                    <div class="card-header bg-secondary border-0 d-flex justify-content-between align-items-center">
                                        <h6 class="m-0"> Mã đơn hàng <b>#@item.OrderCode</b></h6>
                                        <div class="dropdown">
                                            <button class="btn p-0" type="button" id="cardOpt4" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                <i class="bx bx-dots-vertical-rounded"></i>
                                            </button>
                                            <div class="dropdown-menu dropdown-menu-end" aria-labelledby="cardOpt4" style="">
                                                <a class="dropdown-item" href="/Cart/PrintOrderPdf?orderId=@item.Id">In đơn hàng</a>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="card-body mt-2">
                                        <div class="d-flex align-items-center mb-3">
                                            <div class="avatar avt-order-item">
                                                <img src="/img/user-icon.png" class="h-100 w-100 rounded-circle">
                                            </div>
                                            <h6 class="font-weight-semi-bold my-0 mx-1">@item.UserName</h6>
                                            <small>(@(item.UpdatedDate.ToString("dd/MM/yyyy HH:mm:ss", CultureInfo.InvariantCulture)))</small>
                                        </div>
                                        <div class="row">
                                            <div class="col-5">
                                                <h6 class="font-weight-medium mb-2">Người nhận: <label class="font-weight-normal">@item.CustomerName</label></h6>
                                            </div>
                                            <div class="col-7">
                                                <h6 class="font-weight-medium mb-2">Số điện thoại: <label class="font-weight-normal">@item.PhoneNumber</label></h6>
                                            </div>
                                            <div class="col-12">
                                                <h6 class="font-weight-medium mb-2">Địa chỉ: <label class="font-weight-normal">@item.CustomerAddress</label></h6>
                                            </div>
                                        </div>
                                        <hr class="mt-0">
                                        @foreach (var detail in item.OrderDetails)
                                        {
                                            <div class="d-flex justify-content-between mb-3 pt-1">
                                                <div class="d-flex">
                                                    <div class="flex-shrink-0 me-3">
                                                        <div class="align-middle">
                                                            <img src="/uploads/@detail.BookImage" class="img-book-td mx-1" />
                                                        </div>
                                                    </div>
                                                    <div class="flex-grow-1">
                                                        <h6 class="font-weight-medium d-block">@detail.BookName</h6>
                                                        <small class="text-muted">x(@detail.Quantity)</small>
                                                    </div>
                                                </div>
                                                <h6 class="font-weight-medium">@(detail.PriceBuy.ToString("#,##0")) đ</h6>
                                            </div>
                                        }
                                    </div>
                                    <div class="card-footer bg-transparent">
                                        <div class="d-flex justify-content-between ">
                                            <h6 class="font-weight-medium">Phí vận chuyển:</h6>
                                            <h6 class="font-weight-medium">@(item.ShipCost.ToString("#,##0")) đ</h6>
                                        </div>
                                        <div class="d-flex justify-content-between ">
                                            <h6 class="font-weight-medium">Khuyến mại:</h6>
                                            <h6 class="font-weight-medium text-muted"><del>@(item.Discount.ToString("#,##0")) đ</del></h6>
                                        </div>
                                        <div class="d-flex justify-content-between ">
                                            <h5 class="font-weight-bold">Tổng tiền:</h5>
                                            <h5 class="font-weight-bold">@(item.TotalMoney.ToString("#,##0")) đ</h5>
                                        </div>

                                        <h6 class="font-weight-medium">Phương thức vận chuyển: <small>@item.DeliveryName</small></h6>
                                        <h6 class="font-weight-medium">Hình thức thanh toán: <small>@item.PaymentName</small></h6>
                                        <h6 class="font-weight-medium m-0">Ghi chú: <small>@item.OrderNote</small></h6>
                                    </div>
                                    <div class="mb-3 me-3 d-flex" style="align-self: self-end;">
                                        <button class="btn d-block btn-primary me-1" onclick="cancelOrder(@item.Id)" style="width: fit-content;">
                                            Hủy đơn hàng
                                        </button>
                                        <button class="btn d-block btn-primary ms-1" onclick="deliveryOrder(@item.Id)" style="width: fit-content;">
                                            Sẵn sàng giao
                                        </button>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <div class="ctn-empty-table w-100 my-5 text-center">
                                <img src="~/img/empty_data_icon.png" class="w-px-100" />
                                <div>Không có dữ liệu</div>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="cancelReasonModal" tabindex="-1" aria-hidden="true" data-bs-keyboard="false" data-bs-backdrop="static">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Hủy đơn hàng</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col mb-3">
                        <label class="form-label">Lý do hủy <span style="color: red;">*</span></label>
                        <select class="form-select navbar-detached" id="selectReason">
                            <option value="0">Chọn lý do hủy</option>
                            <option value="@Enumerations.ReasonCancelShop.SoldOut">Hết hàng</option>
                            <option value="@Enumerations.ReasonCancelShop.NoContact">Không liên hệ được khách hàng</option>
                            <option value="@Enumerations.ReasonCancelShop.Other">Lý do khác</option>
                        </select>
                    </div>
                </div>
            </div>
            <div class="modal-footer d-flex align-items-center">
                <button type="button" class="btn btn-secondary mx-2" data-bs-dismiss="modal">Đóng</button>
                <button id="btnSave" class="btn btn-primary" onclick="confirmCancel()">Xác nhận</button>
            </div>
        </div>
    </div>
</div>


@section scripts {
    <!-- JavaScript Libraries -->
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.bundle.min.js"></script>
    <script>
        $('#cancelReasonModal #selectReason').on('click', function () {
            $('#cancelReasonModal #selectReason').removeClass("is-invalid");
        })

        function cancelOrder(orderId) {
            $('#cancelReasonModal #selectReason').attr("order-id", orderId);
            $('#cancelReasonModal #selectReason').removeClass("is-invalid");

            $('#cancelReasonModal').modal('show');
        }

        function confirmCancel() {
            let reason = $('#cancelReasonModal #selectReason').find(":selected").val(),
                orderId = parseInt($('#cancelReasonModal #selectReason').attr('order-id'));

            if (reason && reason != "0") {
                $.ajax({
                    url: `/cart/CancelOrderShop?orderId=${orderId}&reason=${reason}`,
                    dataType: "json",
                    type: 'PUT',
                    contentType: 'application/json; charset=utf-8',
                    async: true,
                    success: function (data) {
                        window.location.href = data.redirectToUrl;
                    },
                    error: function (xhr) {
                        showErrorToast('Có lỗi xảy ra trong quá trình xử lý.');
                    }
                });
            }
            else {
                $('#cancelReasonModal #selectReason').addClass("is-invalid");
            }
        }

        function deliveryOrder(orderId) {
            $.ajax({
                url: `/cart/UpdateOrderStatus?orderId=${orderId}&status=${'@Enumerations.OrderStatus.Shipping'}`,
                dataType: "json",
                type: 'PUT',
                contentType: 'application/json; charset=utf-8',
                async: true,
                success: function (data) {
                    window.location.href = data.redirectToUrl;
                },
                error: function (xhr) {
                    showErrorToast('Có lỗi xảy ra trong quá trình xử lý.');
                }
            });
        }

        function showErrorToast(msg) {
            $('.toast-placement').removeClass('bg-success').addClass('bg-danger');
            $('.toast-placement .title').text('Thất bại');
            $('.toast-placement .toast-body').text(msg);
            $('.toast-placement').toast('show');
        }

        function showSuccessToast(msg) {
            $('.toast-placement').removeClass('bg-danger').addClass('bg-success');
            $('.toast-placement .title').text('Thành công');
            $('.toast-placement .toast-body').text(msg);
            $('.toast-placement').toast('show');
        }
    </script>
}